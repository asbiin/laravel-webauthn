# CircleCI build for https://circleci.com/gh/asbiin/laravel-webauthn
# Largely adapted, with the help of https://github.com/angular/angular/blob/master/.circleci/config.yml

version: 2

aliases:
# Some variables
  - &composer_key_base composer-v1-
  - &composer_key composer-v1-{{ checksum "composer.lock" }}
  - &sonar_key_base sonarscanner-v1-
  - &sonar_key sonarscanner-v1-{{ .Environment.SONAR_VERSION }}
  - &root ~/laravel-webauthn

# Defaults env
  - &defaults
    working_directory: *root

  - &unit-tests
    run:
      name: Run unit tests
      command: phpdbg -dmemory_limit=4G -qrr vendor/bin/phpunit -c phpunit.xml --log-junit ./results/results.xml --coverage-clover ./results/coverage.xml
  - &psalm
    run:
      name: Run psalm
      command: vendor/bin/psalm --show-info=false
  - &phpstan
    run:
      name: Run phpstan
      command: vendor/bin/phpstan analyse src
  - &prepare
    run:
      name: Prepare environment
      command: |
        sudo rm -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        sudo apt-get install libgmp-dev
        sudo docker-php-ext-install -j$(nproc) gmp

  - &restore_composer
    restore_cache:
      keys:
        - *composer_key
        - *composer_key_base

jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/php:7.2

    steps:
      - checkout

      - run:
          name: Prepare environment
          command: sudo composer self-update

      ## COMPOSER
      - *restore_composer
      - run: composer install --no-interaction --no-suggest --ignore-platform-reqs
      - save_cache:
          key: *composer_key
          paths: ~/.composer/cache/
      - persist_to_workspace:
          root: *root
          paths: vendor

  tests-7.2:
    <<: *defaults
    docker:
      - image: circleci/php:7.2

    steps:
      - checkout
      - attach_workspace:
          at: *root
      - *prepare
      - *unit-tests
      - store_test_results:
          path: results
      - store_artifacts:
          path: results
      - persist_to_workspace:
          root: *root
          paths: results

  tests-7.3:
    <<: *defaults
    docker:
      - image: circleci/php:7.3

    steps:
      - checkout
      - attach_workspace:
          at: *root
      - *prepare
      - *unit-tests
      - store_test_results:
          path: results
      - store_artifacts:
          path: results

  psalm:
    <<: *defaults
    docker:
      - image: circleci/php:7.2

    steps:
      - checkout
      - attach_workspace:
          at: *root
      - *psalm

  phpstan:
    <<: *defaults
    docker:
      - image: circleci/php:7.2

    steps:
      - checkout
      - attach_workspace:
          at: *root
      - *phpstan

  reporting:
    <<: *defaults
    docker:
      - image: circleci/php:7.2

    steps:
      - checkout:
      - attach_workspace:
          at: *root
      - restore_cache:
          keys:
            - *sonar_key
            - *sonar_key_base

      - run:
          name: Run sonar scanner
          command: |
            export SONAR_RESULT=./results/results.xml
            export SONAR_COVERAGE=./results/coverage.xml
            scripts/tests/runsonar.sh

      - save_cache:
          key: *sonar_key
          paths:
            - ~/sonarscanner
            - ~/.sonar/cache


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - tests-7.2:
          requires:
            - build
      - tests-7.3:
          requires:
            - build
      - psalm:
          requires:
            - build
      - phpstan:
          requires:
            - build
      - reporting:
          requires:
            - tests-7.2
