name: CI

on: [push, release]

jobs:
  tests:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      max-parallel: 15
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.2', '7.3', '7.4']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Install PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: ${{ matrix.php-versions }}
        extension-csv: gmp
    - name: Check PHP Version
      run: php -v
    - name: Check Composer Version
      run: composer -V
    - name: Check PHP Extensions
      run: php -m
    - name: Composer install
      run: composer install --no-interaction --no-suggest --ignore-platform-reqs
    - name : Run tests
      run: |
        mkdir results
        phpdbg -dmemory_limit=4G -qrr vendor/bin/phpunit -c phpunit.xml --log-junit ./results/results.xml --coverage-clover ./results/coverage.xml
    - name: Upload results
      uses: actions/upload-artifact@v1
      with:
        name: results_${{ matrix.operating-system }}_${{ matrix.php-versions }}
        path: results

  psalm:
    runs-on: ubuntu-latest
    name: psalm
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Install PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: '7.3'
        extension-csv: gmp
    - name: Composer install
      run: composer install --no-interaction --no-suggest --ignore-platform-reqs
    - name : Run psalm
      run: vendor/bin/psalm --show-info=false

  phpstan:
    runs-on: ubuntu-latest
    name: phpstan
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Install PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: '7.3'
        extension-csv: gmp
    - name: Composer install
      run: composer install --no-interaction --no-suggest --ignore-platform-reqs
    - name : Run phpstan
      run: vendor/bin/phpstan analyse src

  reporting:
    runs-on: ubuntu-latest
    name: sonar
    needs: [tests]
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Install PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: '7.3'
        extension-csv: gmp
    - name: Composer install
      run: composer install --no-interaction --no-suggest --ignore-platform-reqs
    - name: Download results
      uses: actions/download-artifact@v1
      with:
        name: results_ubuntu-latest_7.3
    - name: test
      run: |
        set
        cat $GITHUB_EVENT_PATH
    - name: Run sonar scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        export SONAR_RESULT=./results/results.xml
        export SONAR_COVERAGE=./results/coverage.xml
        scripts/tests/runsonar.sh
